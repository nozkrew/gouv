# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'fr'
    mailer_user: application@linvestissement.net
    mailer_name: 'Application Linvestissement.net'
    url_base: https://datafrance.info/
    url_second: /immobilier/prix.json?city_code=
    url_api_geo_gouv: https://geo.api.gouv.fr/communes/
    url_api_geo_gouv_second: ?fields=nom,code,codesPostaux,codeDepartement,codeRegion,population&format=geojson&geometry=centre

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    
    recover.command:
        class: App\Command\RecoverDataCommand
        arguments: ['@service_container']
    search.type:
        class: App\Form\SearchType
        arguments: ['@doctrine.orm.entity_manager']
    population.command:
        class: App\Command\RecoverPopulationCommand
        arguments: ['@service_container']
    pricemeter.command:
        class: App\Command\RecoverPriceMeterCommand
        arguments: ['@service_container']
    app.form.registration:
        class: App\Form\RegistrationType
        tags:
            - { name: form.type, alias: app_user_registration }
